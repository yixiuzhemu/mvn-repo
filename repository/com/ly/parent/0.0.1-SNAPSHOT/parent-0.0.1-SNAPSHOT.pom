<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.ly</groupId>
  <artifactId>parent</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>
  <repositories>
  	<repository>
  		<id>local-repo</id>
  		<name>local Repository</name>
  		<url>file://D:\repository\</url>
  	</repository>
 	<repository>
 		<id>apache-repo</id>
 		<name>apache Repository</name>
 		<url>https://repository.apache.org/content/groups/public/</url>
 	</repository>
 	
 	<repository>
 		<id>springsource-repo</id>
 		<name>SpringSource Repository</name>
 		<url>http://repo.spring.io/release/</url>
 	</repository>
 	<repository>
 		<id>springsource-repo-snapshot</id>
 		<name>SpringSource Repository</name>
 		<url>http://repo.spring.io/snapshot/</url>
 	</repository>
 	<repository>
 		<id>jboss-repo-releases</id>
 		<name>Jboss Repository</name>
 		<url>https://repository.jboss.org/nexus/content/repositories/releases/</url>
 	</repository>
 	<repository>
 		<id>central</id>
 		<name>Maven Repository Switchboard</name>
 		<layout>default</layout>
 		<url>http://repo.maven.apache.org/maven2</url>
 	</repository>

 </repositories>
 
  <!-- 版本号控制 数据库驱动配置 -->
  <properties>
  	<spring.version>5.0.2.RELEASE</spring.version>
  	<spring.other.version>4.3.1.RELEASE</spring.other.version>
    <hibernate.core.version>5.1.2.Final</hibernate.core.version>
    <hibernate.ehcache.version>5.1.2.Final</hibernate.ehcache.version>
    <hibernate.commons.annotaions.version>5.0.1.Final</hibernate.commons.annotaions.version>
    <hibernate.validator.version>5.0.2.Final</hibernate.validator.version>
    <persistence.version>1.0</persistence.version>
  	<project.build.soureEncoding>UTF-8</project.build.soureEncoding>
  	<cglib.version>3.1</cglib.version>
  	<commons-lang3.version>3.1</commons-lang3.version>
  	<common-collections4.version>4.0</common-collections4.version>
    <commons-io.version>2.4</commons-io.version>
    <common.fileupload.version>1.3</common.fileupload.version>
    <common.compress.version>1.6</common.compress.version>
    <common.dbcp.version>1.4</common.dbcp.version>
    <commons.pool.version>2.4.2</commons.pool.version>
    <guava.version>15.0</guava.version>
    <ant.version>1.9.2</ant.version>
    <ant.version>1.9.2</ant.version>
    <mockito.version>1.9.5</mockito.version>
    <powermock.version>1.5.2</powermock.version>
    <h2.version>1.3.174</h2.version>
    <aspectj.version>1.8.13</aspectj.version>
    <javassist.version>3.18.0-GA</javassist.version>
    <ehcache.core.version>2.6.6</ehcache.core.version>
  	<shiro.version>1.2.2</shiro.version>
    <slf4j.version>1.7.5</slf4j.version>
    <logback.version>1.0.13</logback.version>
    <druid.version>0.2.23</druid.version>
    <fastjson.version>1.1.34</fastjson.version>
    <httpclient.version>4.3.1</httpclient.version>
    <dom4j.version>1.6.1</dom4j.version>
    <joda-time.version>2.3</joda-time.version>
    <prettytime.version>3.2.3.Final</prettytime.version>
    <jcaptcha.version>2.0-alpha-1</jcaptcha.version>
    <jsoup.version>1.7.3</jsoup.version>
  	<war.version>2.3</war.version>
  	<eclipse.version>2.9</eclipse.version>
  	<jetty.version>8.1.8.v20121106</jetty.version>
  	<junit.version>4.12</junit.version>
  	<asm.version>5.0.4</asm.version>
  	<fasterxml.jackson.databind.version>2.9.3</fasterxml.jackson.databind.version>
  	<fasterxml.jackson.core.version>2.9.3</fasterxml.jackson.core.version>
  	<fasterxml.jackson.annotations.version>2.9.3</fasterxml.jackson.annotations.version>
  	<jar.plugin.version>3.0.2</jar.plugin.version>
  	<spring.jedis.version>2.0.2.RELEASE</spring.jedis.version>
	<jedis.version>2.9.0</jedis.version>
  	
  	<!-- other settin -->
  	<jdk.version>1.8</jdk.version>
  	<tomcat.version>2.1</tomcat.version>
  	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
 <!-- 依赖项定义 -->
 <dependencies>
 	 <!-- 测试相关jar包 -->
 	 <!-- 标准的测试用的工具 -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- 用于单元测试mock的,mock技术的目的和作用就是模拟一些在应用中不容易构造或者比较复杂的对象,从而把测试与测试边界以外的对象隔离开 -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
    
        <!-- h2database轻量级数据库 h2和derby一样,都是轻量级数据库 -->
        <dependency>
            <groupId> com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
            <scope>test</scope>
        </dependency>
        <!--  jetty的web服务包 -->
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <version>${jetty.version}</version>
            <scope>test</scope>
            <!-- 依赖排除 防止因缺少或者找不到该jar包发生错误 -->
            <exclusions>
                <exclusion>
                    <artifactId>javax.servlet</artifactId>
                    <groupId>org.eclipse.jetty.orbit</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- cglib asm 相关jar包  Hibernate用它来实现PO字节码的动态生成-->
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <version>${cglib.version}</version>
        </dependency>
        <!-- ASM字节码库  如果使用“cglib” 则必要 -->
        <dependency>
            <groupId>org.ow2.asm</groupId>
            <artifactId>asm</artifactId>
            <version>${asm.version}</version>
        </dependency>
        <!-- utils 相关jar包 -->
        <!-- 数据库连接池包 -->
		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-pool2</artifactId>
		    <version>${commons.pool.version}</version>
		</dependency>
		<!-- 　DBCP数据库连接池 -->
		<dependency>
		    <groupId>commons-dbcp</groupId>
		    <artifactId>commons-dbcp</artifactId>
		    <version>${common.dbcp.version}</version>
		</dependency>
		<!-- 包含了一些数据类型工具类，是java.lang.*的扩展 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>
        <!-- 包含了一些Apache开发的集合类，功能比java.util.*强大 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>${common-collections4.version}</version>
        </dependency>
        <!-- 
        	Guava 是一个 Google 的基于java1.6的类库集合的扩展项目
        	，包括 collections, caching, primitives support, 
        	concurrency libraries, common annotations, string processing, I/O
         -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
        <!-- 可以看成是java.io的扩展 -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>
        <!-- 包含一些通用的编码解码算法。包括一些语音编码器， Hex, Base64, 以及URL encoder. -->
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.7</version>
        </dependency>
        <!-- 本包包含了一些Bean工具类类，是必须使用的jar包。 -->
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.8.3</version>
            <exclusions>
            	<!--依赖排出 包含了日志功能的jar包 -->
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- jsp的上传文件功能 -->
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>${common.fileupload.version}</version>
        </dependency>
        <!--  是一个压缩、解压缩文件的组件 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <version>${common.compress.version}</version>
        </dependency>
        <!-- ant编译用的包 -->
        <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant</artifactId>
            <version>${ant.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>ant-launcher</artifactId>
                    <groupId>org.apache.ant</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- data source 相关jar包-->
        <!-- 
        
        	Druid是一个JDBC组件，它包括三部分： 

DruidDriver 代理Driver，能够提供基于Filter－Chain模式的插件体系。 
DruidDataSource 高效可管理的数据库连接池。 
SQLParser 
         -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>${druid.version}</version>
        </dependency>
    
        <!-- 日志相关jar包 -->
        <!-- 即简单日志门面（Simple Logging Facade for Java），不是具体的日志解决方案，它只服务于各种各样的日志系统。 -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <!-- 改进后的log4j -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
 <!-- aspectj相关jar包-->
 <!-- 运行aspectj时需要的依赖包 -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>${aspectj.version}</version>
        </dependency>
        <!-- spring使用切入点时需要使用的包 -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspectj.version}</version>
        </dependency>
       <!-- 处理Java字节码的类库 -->
        <dependency>
            <groupId>org.javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>${javassist.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- hibernate相关jar包 -->
        <!-- 核心包 -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate.core.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javassist</groupId>
                    <artifactId>javassist</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Hibernate EntityManager实现了EJB3.0 JPA规范 -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate.core.version}</version>
        </dependency>
        <!-- EhCache 是一个纯Java的进程内缓存框架，具有快速、精干等特点，是Hibernate中默认的CacheProvider。  -->
       <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-ehcache</artifactId>
            <version>${hibernate.ehcache.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
                <exclusion>
                    <artifactId>ehcache-core</artifactId>
                    <groupId>net.sf.ehcache</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- spring 集成 redis -->
        <dependency>
		    <groupId>org.springframework.data</groupId>
		    <artifactId>spring-data-redis</artifactId>
		    <version>${spring.jedis.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.springframework.data</groupId>
		    <artifactId>spring-data-commons</artifactId>
		    <version>${spring.jedis.version}</version>
		</dependency>
		
		<dependency>
		    <groupId>redis.clients</groupId>
		    <artifactId>jedis</artifactId>
		    <version>${jedis.version}</version>
		</dependency>
		
        <!-- 注解配置  -->
        <dependency>
            <groupId>org.hibernate.common</groupId>
            <artifactId>hibernate-commons-annotations</artifactId>
            <version>${hibernate.commons.annotaions.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.hibernate</groupId>
                    <artifactId>hibernate</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- hibernate validator  相关jar包 -->
        	<!-- 验证框架 -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate.validator.version}</version>
        </dependency>
        <!-- apache shiro 相关jar包 -->
        <!-- 用于身份验证和授权 -->
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-core</artifactId>
            <version>${shiro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-web</artifactId>
            <version>${shiro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-aspectj</artifactId>
            <version>${shiro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-ehcache</artifactId>
            <version>${shiro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-spring</artifactId>
            <version>${shiro.version}</version>
        </dependency>
        <!--<dependency>-->
            <!--<groupId>org.apache.shiro</groupId>-->
            <!--<artifactId>shiro-quartz</artifactId>-->
            <!--<version>${shiro.version}</version>-->
            <!--<exclusions>-->
                <!--<exclusion>-->
                    <!--<artifactId>quartz</artifactId>-->
                    <!--<groupId>org.opensymphony.quartz</groupId>-->
                <!--</exclusion>-->
            <!--</exclusions>-->
        <!--</dependency>-->
        <!-- quartz -->
        <!--<dependency>-->
            <!--<groupId>org.quartz-scheduler</groupId>-->
            <!--<artifactId>quartz</artifactId>-->
            <!--<version>${quartz.version}</version>-->
            <!--<exclusions>-->
                <!--<exclusion>-->
                    <!--<artifactId>c3p0</artifactId>-->
                    <!--<groupId>c3p0</groupId>-->
                <!--</exclusion>-->
            <!--</exclusions>-->
        <!--</dependency>-->
        <!-- encache 相关jar包 -->
        <!-- EHCache缓存 -->
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache-core</artifactId>
            <version>${ehcache.core.version}</version>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <artifactId>slf4j-api</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- json 相关jar包 -->
        <!-- 高性能JSON开发包 -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>
        <!-- 安全相关jar包 -->
        <!-- httpclient相关jar包 -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${httpclient.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--dom4j-->
        <dependency>
            <groupId>dom4j</groupId>
            <artifactId>dom4j</artifactId>
            <version>${dom4j.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>xml-apis</groupId>
                    <artifactId>xml-apis</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- 时间相关 -->
        <!--日期美化-->
        <dependency>
            <groupId>org.ocpsoft.prettytime</groupId>
            <artifactId>prettytime</artifactId>
            <version>${prettytime.version}</version>
        </dependency>
        <!-- joda time 相关jar包 -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${joda-time.version}</version>
        </dependency>
        <!-- jcaptcha 验证码 -->
        <dependency>
            <groupId>com.octo.captcha</groupId>
            <artifactId>jcaptcha</artifactId>
            <version>${jcaptcha.version}</version>
        </dependency>
        <!-- web应用 必要的jar包  -->
		<dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>javax.servlet-api</artifactId>
		    <version>3.1.0</version>
		    <scope>provided</scope>
		</dependency>
		<!-- 验证码 -->
        <dependency>
            <groupId>com.octo.captcha</groupId>
            <artifactId>jcaptcha-integration-simple-servlet</artifactId>
            <version>${jcaptcha.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>servlet-api</artifactId>
                    <groupId>javax.servlet</groupId>
                </exclusion>
            </exclusions>
        </dependency>
          <!-- spring相关jar包 -->
          <!-- springIoC（依赖注入）的基础实现，
          所有应用都要用到的，它包含访问配置文件、
          创建和管理bean以及进行Inversion of Control / Dependency Injection（IoC/DI）
          操作相关的所有类。但是这个是个基础实现，
          一般我们在实际的开发过程中很少直接用到，它是对起到支撑作用的。 -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-beans</artifactId>
		    <version>${spring.version}</version>
		</dependency>
		<!-- 包含在应用中使用Spring的AOP特性时所需的类。 -->
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-aop</artifactId>
          <version>${spring.version}</version>
 		</dependency> 
 		<!-- spring核心类 -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-core</artifactId>
		    <version>${spring.version}</version>
		</dependency>
		<!-- 
			包含Web应用开发时，
			用到Spring框架时所需的核心类，
			包括自动载入WebApplicationContext特性的类、
			Struts与JSF集成类、文件上传的支持类、Filter类和大量工具辅助类。
		 -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-web</artifactId>
		    <version>${spring.version}</version>
		</dependency>
		<!-- 
		
			为Spring核心提供了大量扩展。
			可以找到使用Spring ApplicationContext特性时所需的全部类，
			JDNI所需的全部类
			，UI方面的用来与模板(Templating)引擎
			如 Velocity、FreeMarker、JasperReports集成的类，
			以及校验Validation方面的相关类，还有ejb,cache,format,jms等等。
		 -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- spring-context 的扩展支持，用于 MVC 方面 -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- spring对jdbc的简单封装 -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
            
        </dependency>
        <!-- 包含Spring对DAO特性集进行了扩展，
        使其支持 iBATIS、JDO、OJB、TopLink，
        因为Hibernate已经独立成包了，现在不包含在这个包里了
        。这个jar文件里大部分的类都要依赖spring-dao.jar里的类
        ，用这个包时你需要同时包含spring-dao.jar包。
        spring 整合第三方的 ORM 映射支持，
        如 Hibernate 、Ibatis、Jdo 以及spring的JPA的支持。 -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- spring提供对事务的支持，事务的相关处理以及实现类就在这个Jar包中 -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- 提供对AspectJ的支持，以便可以方便的将面向方面的功能集成进IDE中 -->
       <dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- spring mvc相关，实现SpringMVC的操作。 -->
        <dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- spring对JUnit框架的简单封装。 -->
		<dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- 切入点表达式 -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-expression</artifactId>
		    <version>${spring.version}</version>
		</dependency>
		<!-- spring对服务器的代理接口。 -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-instrument</artifactId>
		    <version>${spring.version}</version>
		</dependency>
		<!-- spring对tomcat连接池的集成。 -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-instrument-tomcat</artifactId>
		    <version>${spring.other.version}</version>
		</dependency>
	<!-- spring对jms(java message service)的封装，为了简化对JMS API的使用 -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-jms</artifactId>
		    <version>4.3.12.RELEASE</version>
		</dependency>
		<!-- spring 对Object/XMI 的映射的支持，可以让JAVA与XML之间来回切换。 -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-oxm</artifactId>
		    <version>${spring.version}</version>
		</dependency>
		<!-- spring mvc的增强扩展。 -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-webmvc-portlet</artifactId>
		    <version>${spring.other.version}</version>
		</dependency>
        <!-- html处理jar包 -->
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>${jsoup.version}</version>
        </dependency>
        <!-- 基于Java语言的开源json格式解析工具 -->
        <!-- 提供基于“对象绑定”和“树模型”相关API。 -->
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		    <version>${fasterxml.jackson.databind.version}</version>
		</dependency>
		<!-- 提供基于“流模式”解析的API。 -->
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-core</artifactId>
		    <version>${fasterxml.jackson.core.version}</version>
		</dependency>
		<!-- 提供注解功能。 -->
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-annotations</artifactId>
		    <version>  ${fasterxml.jackson.annotations.version}</version>
		</dependency>
	
      
 </dependencies>
 <build>
 	<outputDirectory>${project.basedir}/src/main/webapp/WEB-INF/classes/</outputDirectory>
 	<plugins>
 	 <!-- Compiler 插件,maven编译项目代码 设定JDK版本 -->
                        <plugin>
                                <groupId>org.apache.maven.plugins</groupId>
                                <artifactId>maven-compiler-plugin</artifactId>
                                <version>2.5.1</version>
                                <configuration>
                                        <source>${jdk.version}</source>
                                        <target>${jdk.version}</target>
                                        <showWarnings>true</showWarnings>
                                </configuration>
                        </plugin>
 	<!-- war 打包插件，设定war包名称不带版本号 -->
 		<plugin>
 			<groupId>org.apache.maven.plugins</groupId>
 			<artifactId>maven-war-plugin</artifactId>
 			<version>${war.version}</version>
 			<configuration>
 				<warName>${project.artifactId}</warName>
 			</configuration>
 		</plugin>

 		<!-- Eclipse 插件 -->
 		<plugin>
 			<groupId>org.apache.maven.plugins</groupId>
 			<artifactId>maven-eclipse-plugin</artifactId>
 			<version>${eclipse.version}</version>
 			<configuration>
 				<downloadSources>false</downloadSources>
 				<downloadJavadocs>false</downloadJavadocs>
 				<wtpversion>2.0</wtpversion>
 				<additionalConfig>
 					<file>
 						<name>.settings/org.eclipse.core.resources.prefs</name>
 						<content>
 							  <![CDATA[
				      <?xml version="1.0" encoding="UTF-8"?><project-modules id="moduleCoreId" project-version="1.5.0">
					    <wb-module deploy-name="webapp3">
					        <wb-resource deploy-path="/" source-path="/target/m2e-wtp2/web-resources"/>
					        <wb-resource deploy-path="/" source-path="/WebContent" tag="defaultRootSource"/>
					        <wb-resource deploy-path="/WEB-INF/classes" source-path="/src"/>
					        <property name="context-root" value="webapp3"/>
					        <property name="java-output-path" value="/webapp3/target/classes"/>
					    </wb-module>
					</project-modules>
								      
				      ]]>
 						</content>
 					</file>
 				</additionalConfig>
 				<additionalProjectnatures>
 					<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature> 		
 				</additionalProjectnatures>
 			</configuration>
 		</plugin>
 		<!-- tomcat插件 -->
 		<plugin>
 			<groupId>org.apache.tomcat.maven</groupId>
 			<artifactId>tomcat8-maven-plugin</artifactId>
 			<version>${tomcat.version}</version>
 			<configuration>
 				<path>/${project.artifactId}</path>
 			</configuration>
 		</plugin>
 		<!-- jetty插件 -->
 		<plugin>
 			<groupId>org.mortabay.jetty</groupId>
 			<artifactId>jetty-maven-plugin</artifactId>
 			<version>${jetty.version}</version>
 			<configuration>
 				<webAppConfig>
 					<contextPath>/${project.artifactId}</contextPath>
 				</webAppConfig>
 			</configuration>
 		</plugin>
 		<!-- resource插件 -->
 		<plugin>
 			<groupId>org.apache.maven.plugins</groupId>
 			<artifactId>maven-resources-plugin</artifactId>
 			<version>2.6</version>
 		</plugin>
 		<!-- install插件 -->
 		<plugin>
 			<groupId>org.apache.maven.plugins</groupId>
 			<artifactId>maven-install-plugin</artifactId>
 			<version>2.4</version>
 		</plugin>
 		<!-- clean插件 -->
 		<plugin>
 			<groupId>org.apache.maven.plugins</groupId>
 			<artifactId>maven-clean-plugin</artifactId>
 			<version>2.5</version>
 		</plugin>
 		<!-- ant插件 -->
 		<plugin>
 			<groupId>org.apache.maven.plugins</groupId>
 			<artifactId>maven-antrun-plugin</artifactId>
 			<version>1.7</version>
 		</plugin>
 		<!-- dependency插件 -->
 		<plugin>
 			<groupId>org.apache.maven.plugins</groupId>
 			<artifactId>maven-dependency-plugin</artifactId>
 			<version>2.5.1</version>
 		</plugin>
 		   
 	</plugins>
 </build>
  
  
</project>